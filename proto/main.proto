syntax = "proto3";

import "google/api/annotations.proto";
import "banking.proto";
import "user.proto";
import "budgeting.proto";

option go_package = "personalfinance/generated/proto";

message Empty {}

service BankingService {
  rpc GetBanks(GetBanksRequest) returns (GetBanksResponse);
  rpc CreateRequisition(CreateRequisitionRequest) returns (CreateRequisitionResponse);
  rpc GetBankAccounts(GetBankAccountsRequest) returns (GetBankAccountsResponse);
  rpc GetBalancesPerDay(GetBalancesPerDayRequest) returns (GetBalancesPerDayResponse);
  rpc HandleRequisition(HandleRequisitionRequest) returns (HandleRequisitionResponse) {
    option (google.api.http) = {
      get: "/handleRequisition/{requisitionReference}"
    };
  }
}

service UserService {
  rpc RegisterUnverifiedUser(RegisterUnverifiedUserRequest) returns (RegisterUnverifiedUserResponse);
  rpc LinkUser(LinkUserRequest) returns (LinkUserResponse);
}

service BudgetingService {
  rpc GetTransactionById(GetTransactionByIdRequest) returns (TransactionResponse);
  rpc GetTransactions(GetTransactionsRequest) returns (GetTransactionsResponse);
  rpc GetUncategorizedTransaction(GetUncategorizedTransactionRequest) returns (GetUncategorizedTransactionResponse);
  rpc CategorizeTransactionAndContinue(CategorizeTransactionAndContinueRequest) returns (GetUncategorizedTransactionResponse);
  rpc GetTransactionCategoryGroups(GetTransactionCategoryGroupsRequest) returns (GetTransactionCategoryGroupsResponse);
  rpc GetCategorizedTransactionResults(GetCategorizedTransactionResultsRequest) returns (GetCategorizedTransactionResultsResponse);
  rpc GetInAndOutgoingTransactionAmountsPerPeriod(GetInAndOutgoingTransactionAmountsPerPeriodRequest) returns (GetInAndOutgoingTransactionAmountsPerPeriodResponse);
  rpc AssociateTransaction(AssociateTransactionRequest) returns (AssociateTransactionResponse);
  rpc GetMinusTransactionsAroundDate(GetMinusTransactionsAroundDateRequest) returns (GetMinusTransactionsAroundDateResponse);
}
